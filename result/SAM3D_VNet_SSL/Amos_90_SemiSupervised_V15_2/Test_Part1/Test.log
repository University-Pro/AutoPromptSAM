[2025-07-13 20:19:57] INFO     - 
======================================== 运行配置 ========================================
[2025-07-13 20:19:57] INFO     - model_path          : ./result/SAM3D_VNet_SSL/Amos_90_SemiSupervised_V15_2/Pth_Part1/epoch_100.pth
[2025-07-13 20:19:57] INFO     - amos_data_path      : ./datasets/Amos
[2025-07-13 20:19:57] INFO     - output_dir          : ./result/SAM3D_VNet_SSL/Amos_90_SemiSupervised_V15_2/Test_Part1
[2025-07-13 20:19:57] INFO     - split               : test
[2025-07-13 20:19:57] INFO     - speed               : 0
[2025-07-13 20:19:57] INFO     - gpu                 : 0
[2025-07-13 20:19:57] INFO     - n_filters           : 16
[2025-07-13 20:19:57] INFO     - num_channels        : 1
[2025-07-13 20:19:57] INFO     - metrics_log         : ./result/SAM3D_VNet_SSL/Amos_90_SemiSupervised_V15_2/Test_Part1/Test.log
[2025-07-13 20:19:57] INFO     - save_images         : False
[2025-07-13 20:19:57] INFO     - 输入尺寸: (160, 160, 80), 类别数量: 16, 滑动窗口步长: XY=40, Z=20
[2025-07-13 20:19:58] INFO     - 模型总参数量: 167.64M
[2025-07-13 20:20:03] INFO     - 成功从 ./result/SAM3D_VNet_SSL/Amos_90_SemiSupervised_V15_2/Pth_Part1/epoch_100.pth 加载 checkpoint 文件。
[2025-07-13 20:20:03] INFO     - 未找到 EMA 权重，选择 'model_state_dict' 进行加载。
[2025-07-13 20:20:03] INFO     - 检测到 'module.' 前缀，将进行移除。
[2025-07-13 20:20:03] ERROR    - 加载模型时发生错误: Error(s) in loading state_dict for Network:
	Missing key(s) in state_dict: "samencoder.block1.norm1.weight", "samencoder.block1.norm1.bias", "samencoder.block1.attn.qkv.weight", "samencoder.block1.attn.qkv.bias", "samencoder.block1.attn.proj.weight", "samencoder.block1.attn.proj.bias", "samencoder.block1.norm2.weight", "samencoder.block1.norm2.bias", "samencoder.block1.mlp.lin1.weight", "samencoder.block1.mlp.lin1.bias", "samencoder.block1.mlp.lin2.weight", "samencoder.block1.mlp.lin2.bias", "samencoder.block2.norm1.weight", "samencoder.block2.norm1.bias", "samencoder.block2.attn.qkv.weight", "samencoder.block2.attn.qkv.bias", "samencoder.block2.attn.proj.weight", "samencoder.block2.attn.proj.bias", "samencoder.block2.norm2.weight", "samencoder.block2.norm2.bias", "samencoder.block2.mlp.lin1.weight", "samencoder.block2.mlp.lin1.bias", "samencoder.block2.mlp.lin2.weight", "samencoder.block2.mlp.lin2.bias", "samencoder.block3.norm1.weight", "samencoder.block3.norm1.bias", "samencoder.block3.attn.qkv.weight", "samencoder.block3.attn.qkv.bias", "samencoder.block3.attn.proj.weight", "samencoder.block3.attn.proj.bias", "samencoder.block3.norm2.weight", "samencoder.block3.norm2.bias", "samencoder.block3.mlp.lin1.weight", "samencoder.block3.mlp.lin1.bias", "samencoder.block3.mlp.lin2.weight", "samencoder.block3.mlp.lin2.bias", "samencoder.block4.norm1.weight", "samencoder.block4.norm1.bias", "samencoder.block4.attn.qkv.weight", "samencoder.block4.attn.qkv.bias", "samencoder.block4.attn.proj.weight", "samencoder.block4.attn.proj.bias", "samencoder.block4.norm2.weight", "samencoder.block4.norm2.bias", "samencoder.block4.mlp.lin1.weight", "samencoder.block4.mlp.lin1.bias", "samencoder.block4.mlp.lin2.weight", "samencoder.block4.mlp.lin2.bias". 
	Unexpected key(s) in state_dict: "samencoder.stage1_blocks.0.norm1.weight", "samencoder.stage1_blocks.0.norm1.bias", "samencoder.stage1_blocks.0.attn.qkv.weight", "samencoder.stage1_blocks.0.attn.qkv.bias", "samencoder.stage1_blocks.0.attn.proj.weight", "samencoder.stage1_blocks.0.attn.proj.bias", "samencoder.stage1_blocks.0.norm2.weight", "samencoder.stage1_blocks.0.norm2.bias", "samencoder.stage1_blocks.0.mlp.lin1.weight", "samencoder.stage1_blocks.0.mlp.lin1.bias", "samencoder.stage1_blocks.0.mlp.lin2.weight", "samencoder.stage1_blocks.0.mlp.lin2.bias", "samencoder.stage1_blocks.1.norm1.weight", "samencoder.stage1_blocks.1.norm1.bias", "samencoder.stage1_blocks.1.attn.qkv.weight", "samencoder.stage1_blocks.1.attn.qkv.bias", "samencoder.stage1_blocks.1.attn.proj.weight", "samencoder.stage1_blocks.1.attn.proj.bias", "samencoder.stage1_blocks.1.norm2.weight", "samencoder.stage1_blocks.1.norm2.bias", "samencoder.stage1_blocks.1.mlp.lin1.weight", "samencoder.stage1_blocks.1.mlp.lin1.bias", "samencoder.stage1_blocks.1.mlp.lin2.weight", "samencoder.stage1_blocks.1.mlp.lin2.bias", "samencoder.stage2_blocks.0.norm1.weight", "samencoder.stage2_blocks.0.norm1.bias", "samencoder.stage2_blocks.0.attn.qkv.weight", "samencoder.stage2_blocks.0.attn.qkv.bias", "samencoder.stage2_blocks.0.attn.proj.weight", "samencoder.stage2_blocks.0.attn.proj.bias", "samencoder.stage2_blocks.0.norm2.weight", "samencoder.stage2_blocks.0.norm2.bias", "samencoder.stage2_blocks.0.mlp.lin1.weight", "samencoder.stage2_blocks.0.mlp.lin1.bias", "samencoder.stage2_blocks.0.mlp.lin2.weight", "samencoder.stage2_blocks.0.mlp.lin2.bias", "samencoder.stage2_blocks.1.norm1.weight", "samencoder.stage2_blocks.1.norm1.bias", "samencoder.stage2_blocks.1.attn.qkv.weight", "samencoder.stage2_blocks.1.attn.qkv.bias", "samencoder.stage2_blocks.1.attn.proj.weight", "samencoder.stage2_blocks.1.attn.proj.bias", "samencoder.stage2_blocks.1.norm2.weight", "samencoder.stage2_blocks.1.norm2.bias", "samencoder.stage2_blocks.1.mlp.lin1.weight", "samencoder.stage2_blocks.1.mlp.lin1.bias", "samencoder.stage2_blocks.1.mlp.lin2.weight", "samencoder.stage2_blocks.1.mlp.lin2.bias", "samencoder.stage3_blocks.0.norm1.weight", "samencoder.stage3_blocks.0.norm1.bias", "samencoder.stage3_blocks.0.attn.qkv.weight", "samencoder.stage3_blocks.0.attn.qkv.bias", "samencoder.stage3_blocks.0.attn.proj.weight", "samencoder.stage3_blocks.0.attn.proj.bias", "samencoder.stage3_blocks.0.norm2.weight", "samencoder.stage3_blocks.0.norm2.bias", "samencoder.stage3_blocks.0.mlp.lin1.weight", "samencoder.stage3_blocks.0.mlp.lin1.bias", "samencoder.stage3_blocks.0.mlp.lin2.weight", "samencoder.stage3_blocks.0.mlp.lin2.bias", "samencoder.stage3_blocks.1.norm1.weight", "samencoder.stage3_blocks.1.norm1.bias", "samencoder.stage3_blocks.1.attn.qkv.weight", "samencoder.stage3_blocks.1.attn.qkv.bias", "samencoder.stage3_blocks.1.attn.proj.weight", "samencoder.stage3_blocks.1.attn.proj.bias", "samencoder.stage3_blocks.1.norm2.weight", "samencoder.stage3_blocks.1.norm2.bias", "samencoder.stage3_blocks.1.mlp.lin1.weight", "samencoder.stage3_blocks.1.mlp.lin1.bias", "samencoder.stage3_blocks.1.mlp.lin2.weight", "samencoder.stage3_blocks.1.mlp.lin2.bias", "samencoder.stage3_blocks.2.norm1.weight", "samencoder.stage3_blocks.2.norm1.bias", "samencoder.stage3_blocks.2.attn.qkv.weight", "samencoder.stage3_blocks.2.attn.qkv.bias", "samencoder.stage3_blocks.2.attn.proj.weight", "samencoder.stage3_blocks.2.attn.proj.bias", "samencoder.stage3_blocks.2.norm2.weight", "samencoder.stage3_blocks.2.norm2.bias", "samencoder.stage3_blocks.2.mlp.lin1.weight", "samencoder.stage3_blocks.2.mlp.lin1.bias", "samencoder.stage3_blocks.2.mlp.lin2.weight", "samencoder.stage3_blocks.2.mlp.lin2.bias", "samencoder.stage3_blocks.3.norm1.weight", "samencoder.stage3_blocks.3.norm1.bias", "samencoder.stage3_blocks.3.attn.qkv.weight", "samencoder.stage3_blocks.3.attn.qkv.bias", "samencoder.stage3_blocks.3.attn.proj.weight", "samencoder.stage3_blocks.3.attn.proj.bias", "samencoder.stage3_blocks.3.norm2.weight", "samencoder.stage3_blocks.3.norm2.bias", "samencoder.stage3_blocks.3.mlp.lin1.weight", "samencoder.stage3_blocks.3.mlp.lin1.bias", "samencoder.stage3_blocks.3.mlp.lin2.weight", "samencoder.stage3_blocks.3.mlp.lin2.bias", "samencoder.stage4_blocks.0.norm1.weight", "samencoder.stage4_blocks.0.norm1.bias", "samencoder.stage4_blocks.0.attn.qkv.weight", "samencoder.stage4_blocks.0.attn.qkv.bias", "samencoder.stage4_blocks.0.attn.proj.weight", "samencoder.stage4_blocks.0.attn.proj.bias", "samencoder.stage4_blocks.0.norm2.weight", "samencoder.stage4_blocks.0.norm2.bias", "samencoder.stage4_blocks.0.mlp.lin1.weight", "samencoder.stage4_blocks.0.mlp.lin1.bias", "samencoder.stage4_blocks.0.mlp.lin2.weight", "samencoder.stage4_blocks.0.mlp.lin2.bias", "samencoder.stage4_blocks.1.norm1.weight", "samencoder.stage4_blocks.1.norm1.bias", "samencoder.stage4_blocks.1.attn.qkv.weight", "samencoder.stage4_blocks.1.attn.qkv.bias", "samencoder.stage4_blocks.1.attn.proj.weight", "samencoder.stage4_blocks.1.attn.proj.bias", "samencoder.stage4_blocks.1.norm2.weight", "samencoder.stage4_blocks.1.norm2.bias", "samencoder.stage4_blocks.1.mlp.lin1.weight", "samencoder.stage4_blocks.1.mlp.lin1.bias", "samencoder.stage4_blocks.1.mlp.lin2.weight", "samencoder.stage4_blocks.1.mlp.lin2.bias", "samencoder.patchmerging0.reduction.weight", "samencoder.patchmerging0.norm.weight", "samencoder.patchmerging0.norm.bias". 
	size mismatch for samencoder.pos_embed: copying a param with shape torch.Size([1, 80, 80, 40, 96]) from checkpoint, the shape in current model is torch.Size([1, 80, 80, 40, 192]).
	size mismatch for samencoder.patch_embed1.proj.weight: copying a param with shape torch.Size([96, 1, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([192, 1, 2, 2, 2]).
	size mismatch for samencoder.patch_embed1.proj.bias: copying a param with shape torch.Size([96]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for vnet.block_one.conv.0.weight: copying a param with shape torch.Size([16, 1, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([32, 1, 3, 3, 3]).
	size mismatch for vnet.block_one.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_one.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_one.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_one.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_one.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_one_dw.conv.0.weight: copying a param with shape torch.Size([32, 16, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([64, 32, 2, 2, 2]).
	size mismatch for vnet.block_one_dw.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_one_dw.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_one_dw.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_one_dw.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_one_dw.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.0.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for vnet.block_two.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for vnet.block_two.conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two_dw.conv.0.weight: copying a param with shape torch.Size([64, 32, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([128, 64, 2, 2, 2]).
	size mismatch for vnet.block_two_dw.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_two_dw.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_two_dw.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_two_dw.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_two_dw.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.0.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_three.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_three.conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.6.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_three.conv.6.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.7.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.7.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.7.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.7.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three_dw.conv.0.weight: copying a param with shape torch.Size([128, 64, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([256, 128, 2, 2, 2]).
	size mismatch for vnet.block_three_dw.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_three_dw.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_three_dw.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_three_dw.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_three_dw.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.0.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_four.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_four.conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.6.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_four.conv.6.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.7.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.7.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.7.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.7.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four_dw.conv.0.weight: copying a param with shape torch.Size([256, 128, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([512, 256, 2, 2, 2]).
	size mismatch for vnet.block_four_dw.conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_four_dw.conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_four_dw.conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_four_dw.conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_four_dw.conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.0.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for vnet.block_five.conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.3.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for vnet.block_five.conv.3.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.4.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.4.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.4.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.4.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.6.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for vnet.block_five.conv.6.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.7.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.7.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.7.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.7.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five_up.conv.0.weight: copying a param with shape torch.Size([256, 128, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([512, 256, 2, 2, 2]).
	size mismatch for vnet.block_five_up.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_five_up.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_five_up.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_five_up.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_five_up.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.0.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_six.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_six.conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.6.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_six.conv.6.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.7.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.7.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.7.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.7.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six_up.conv.0.weight: copying a param with shape torch.Size([128, 64, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([256, 128, 2, 2, 2]).
	size mismatch for vnet.block_six_up.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_six_up.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_six_up.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_six_up.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_six_up.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.0.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_seven.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_seven.conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.6.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_seven.conv.6.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.7.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.7.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.7.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.7.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven_up.conv.0.weight: copying a param with shape torch.Size([64, 32, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([128, 64, 2, 2, 2]).
	size mismatch for vnet.block_seven_up.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_seven_up.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_seven_up.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_seven_up.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_seven_up.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.0.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for vnet.block_eight.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for vnet.block_eight.conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight_up.conv.0.weight: copying a param with shape torch.Size([32, 16, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([64, 32, 2, 2, 2]).
	size mismatch for vnet.block_eight_up.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_eight_up.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_eight_up.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_eight_up.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_eight_up.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_nine.conv.0.weight: copying a param with shape torch.Size([16, 16, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([32, 32, 3, 3, 3]).
	size mismatch for vnet.block_nine.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_nine.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_nine.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_nine.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_nine.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.logits_head.weight: copying a param with shape torch.Size([16, 16, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([16, 32, 1, 1, 1]).
	size mismatch for vnet.variance_head.0.weight: copying a param with shape torch.Size([1, 16, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 32, 1, 1, 1]).
	size mismatch for uncertainty_gen.network.block_one.conv.0.weight: copying a param with shape torch.Size([16, 1, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([32, 1, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_one.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_one.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_one.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_one.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_one.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.0.weight: copying a param with shape torch.Size([32, 16, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([64, 32, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.0.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_two.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_two.conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.0.weight: copying a param with shape torch.Size([64, 32, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([128, 64, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.0.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_three.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_three.conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.6.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_three.conv.6.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.7.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.7.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.7.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.7.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.0.weight: copying a param with shape torch.Size([128, 64, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([256, 128, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.0.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_four.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_four.conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.6.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_four.conv.6.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.7.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.7.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.7.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.7.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.0.weight: copying a param with shape torch.Size([256, 128, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([512, 256, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.0.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_five.conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.3.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_five.conv.3.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.4.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.4.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.4.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.4.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.6.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_five.conv.6.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.7.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.7.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.7.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.7.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.0.weight: copying a param with shape torch.Size([256, 128, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([512, 256, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.0.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_six.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_six.conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.6.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_six.conv.6.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.7.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.7.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.7.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.7.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.0.weight: copying a param with shape torch.Size([128, 64, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([256, 128, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.0.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_seven.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_seven.conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.6.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_seven.conv.6.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.7.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.7.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.7.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.7.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.0.weight: copying a param with shape torch.Size([64, 32, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([128, 64, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.0.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_eight.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_eight.conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.0.weight: copying a param with shape torch.Size([32, 16, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([64, 32, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_nine.conv.0.weight: copying a param with shape torch.Size([16, 16, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([32, 32, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_nine.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_nine.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_nine.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_nine.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_nine.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.logits_head.weight: copying a param with shape torch.Size([16, 16, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([16, 32, 1, 1, 1]).
	size mismatch for uncertainty_gen.network.variance_head.0.weight: copying a param with shape torch.Size([1, 16, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 32, 1, 1, 1]).
	size mismatch for carf_module.proj_a.weight: copying a param with shape torch.Size([768, 128, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([768, 256, 1, 1, 1]).
	size mismatch for carf_module.proj_b.weight: copying a param with shape torch.Size([768, 384, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([768, 768, 1, 1, 1]).
[2025-07-13 20:20:03] ERROR    - 模型初始化失败!
Traceback (most recent call last):
  File "/samba/network-storage/westdigital/pi/sam2-ssl/Test_Amos_V2.py", line 298, in <module>
    model = load_model(model, args.model_path, device)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/samba/network-storage/westdigital/pi/sam2-ssl/Test_Amos_V2.py", line 227, in load_model
    model.load_state_dict(state_dict_final)
  File "/samba/network-storage/remotessd/cache/envs/torch-env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 2593, in load_state_dict
    raise RuntimeError(
RuntimeError: Error(s) in loading state_dict for Network:
	Missing key(s) in state_dict: "samencoder.block1.norm1.weight", "samencoder.block1.norm1.bias", "samencoder.block1.attn.qkv.weight", "samencoder.block1.attn.qkv.bias", "samencoder.block1.attn.proj.weight", "samencoder.block1.attn.proj.bias", "samencoder.block1.norm2.weight", "samencoder.block1.norm2.bias", "samencoder.block1.mlp.lin1.weight", "samencoder.block1.mlp.lin1.bias", "samencoder.block1.mlp.lin2.weight", "samencoder.block1.mlp.lin2.bias", "samencoder.block2.norm1.weight", "samencoder.block2.norm1.bias", "samencoder.block2.attn.qkv.weight", "samencoder.block2.attn.qkv.bias", "samencoder.block2.attn.proj.weight", "samencoder.block2.attn.proj.bias", "samencoder.block2.norm2.weight", "samencoder.block2.norm2.bias", "samencoder.block2.mlp.lin1.weight", "samencoder.block2.mlp.lin1.bias", "samencoder.block2.mlp.lin2.weight", "samencoder.block2.mlp.lin2.bias", "samencoder.block3.norm1.weight", "samencoder.block3.norm1.bias", "samencoder.block3.attn.qkv.weight", "samencoder.block3.attn.qkv.bias", "samencoder.block3.attn.proj.weight", "samencoder.block3.attn.proj.bias", "samencoder.block3.norm2.weight", "samencoder.block3.norm2.bias", "samencoder.block3.mlp.lin1.weight", "samencoder.block3.mlp.lin1.bias", "samencoder.block3.mlp.lin2.weight", "samencoder.block3.mlp.lin2.bias", "samencoder.block4.norm1.weight", "samencoder.block4.norm1.bias", "samencoder.block4.attn.qkv.weight", "samencoder.block4.attn.qkv.bias", "samencoder.block4.attn.proj.weight", "samencoder.block4.attn.proj.bias", "samencoder.block4.norm2.weight", "samencoder.block4.norm2.bias", "samencoder.block4.mlp.lin1.weight", "samencoder.block4.mlp.lin1.bias", "samencoder.block4.mlp.lin2.weight", "samencoder.block4.mlp.lin2.bias". 
	Unexpected key(s) in state_dict: "samencoder.stage1_blocks.0.norm1.weight", "samencoder.stage1_blocks.0.norm1.bias", "samencoder.stage1_blocks.0.attn.qkv.weight", "samencoder.stage1_blocks.0.attn.qkv.bias", "samencoder.stage1_blocks.0.attn.proj.weight", "samencoder.stage1_blocks.0.attn.proj.bias", "samencoder.stage1_blocks.0.norm2.weight", "samencoder.stage1_blocks.0.norm2.bias", "samencoder.stage1_blocks.0.mlp.lin1.weight", "samencoder.stage1_blocks.0.mlp.lin1.bias", "samencoder.stage1_blocks.0.mlp.lin2.weight", "samencoder.stage1_blocks.0.mlp.lin2.bias", "samencoder.stage1_blocks.1.norm1.weight", "samencoder.stage1_blocks.1.norm1.bias", "samencoder.stage1_blocks.1.attn.qkv.weight", "samencoder.stage1_blocks.1.attn.qkv.bias", "samencoder.stage1_blocks.1.attn.proj.weight", "samencoder.stage1_blocks.1.attn.proj.bias", "samencoder.stage1_blocks.1.norm2.weight", "samencoder.stage1_blocks.1.norm2.bias", "samencoder.stage1_blocks.1.mlp.lin1.weight", "samencoder.stage1_blocks.1.mlp.lin1.bias", "samencoder.stage1_blocks.1.mlp.lin2.weight", "samencoder.stage1_blocks.1.mlp.lin2.bias", "samencoder.stage2_blocks.0.norm1.weight", "samencoder.stage2_blocks.0.norm1.bias", "samencoder.stage2_blocks.0.attn.qkv.weight", "samencoder.stage2_blocks.0.attn.qkv.bias", "samencoder.stage2_blocks.0.attn.proj.weight", "samencoder.stage2_blocks.0.attn.proj.bias", "samencoder.stage2_blocks.0.norm2.weight", "samencoder.stage2_blocks.0.norm2.bias", "samencoder.stage2_blocks.0.mlp.lin1.weight", "samencoder.stage2_blocks.0.mlp.lin1.bias", "samencoder.stage2_blocks.0.mlp.lin2.weight", "samencoder.stage2_blocks.0.mlp.lin2.bias", "samencoder.stage2_blocks.1.norm1.weight", "samencoder.stage2_blocks.1.norm1.bias", "samencoder.stage2_blocks.1.attn.qkv.weight", "samencoder.stage2_blocks.1.attn.qkv.bias", "samencoder.stage2_blocks.1.attn.proj.weight", "samencoder.stage2_blocks.1.attn.proj.bias", "samencoder.stage2_blocks.1.norm2.weight", "samencoder.stage2_blocks.1.norm2.bias", "samencoder.stage2_blocks.1.mlp.lin1.weight", "samencoder.stage2_blocks.1.mlp.lin1.bias", "samencoder.stage2_blocks.1.mlp.lin2.weight", "samencoder.stage2_blocks.1.mlp.lin2.bias", "samencoder.stage3_blocks.0.norm1.weight", "samencoder.stage3_blocks.0.norm1.bias", "samencoder.stage3_blocks.0.attn.qkv.weight", "samencoder.stage3_blocks.0.attn.qkv.bias", "samencoder.stage3_blocks.0.attn.proj.weight", "samencoder.stage3_blocks.0.attn.proj.bias", "samencoder.stage3_blocks.0.norm2.weight", "samencoder.stage3_blocks.0.norm2.bias", "samencoder.stage3_blocks.0.mlp.lin1.weight", "samencoder.stage3_blocks.0.mlp.lin1.bias", "samencoder.stage3_blocks.0.mlp.lin2.weight", "samencoder.stage3_blocks.0.mlp.lin2.bias", "samencoder.stage3_blocks.1.norm1.weight", "samencoder.stage3_blocks.1.norm1.bias", "samencoder.stage3_blocks.1.attn.qkv.weight", "samencoder.stage3_blocks.1.attn.qkv.bias", "samencoder.stage3_blocks.1.attn.proj.weight", "samencoder.stage3_blocks.1.attn.proj.bias", "samencoder.stage3_blocks.1.norm2.weight", "samencoder.stage3_blocks.1.norm2.bias", "samencoder.stage3_blocks.1.mlp.lin1.weight", "samencoder.stage3_blocks.1.mlp.lin1.bias", "samencoder.stage3_blocks.1.mlp.lin2.weight", "samencoder.stage3_blocks.1.mlp.lin2.bias", "samencoder.stage3_blocks.2.norm1.weight", "samencoder.stage3_blocks.2.norm1.bias", "samencoder.stage3_blocks.2.attn.qkv.weight", "samencoder.stage3_blocks.2.attn.qkv.bias", "samencoder.stage3_blocks.2.attn.proj.weight", "samencoder.stage3_blocks.2.attn.proj.bias", "samencoder.stage3_blocks.2.norm2.weight", "samencoder.stage3_blocks.2.norm2.bias", "samencoder.stage3_blocks.2.mlp.lin1.weight", "samencoder.stage3_blocks.2.mlp.lin1.bias", "samencoder.stage3_blocks.2.mlp.lin2.weight", "samencoder.stage3_blocks.2.mlp.lin2.bias", "samencoder.stage3_blocks.3.norm1.weight", "samencoder.stage3_blocks.3.norm1.bias", "samencoder.stage3_blocks.3.attn.qkv.weight", "samencoder.stage3_blocks.3.attn.qkv.bias", "samencoder.stage3_blocks.3.attn.proj.weight", "samencoder.stage3_blocks.3.attn.proj.bias", "samencoder.stage3_blocks.3.norm2.weight", "samencoder.stage3_blocks.3.norm2.bias", "samencoder.stage3_blocks.3.mlp.lin1.weight", "samencoder.stage3_blocks.3.mlp.lin1.bias", "samencoder.stage3_blocks.3.mlp.lin2.weight", "samencoder.stage3_blocks.3.mlp.lin2.bias", "samencoder.stage4_blocks.0.norm1.weight", "samencoder.stage4_blocks.0.norm1.bias", "samencoder.stage4_blocks.0.attn.qkv.weight", "samencoder.stage4_blocks.0.attn.qkv.bias", "samencoder.stage4_blocks.0.attn.proj.weight", "samencoder.stage4_blocks.0.attn.proj.bias", "samencoder.stage4_blocks.0.norm2.weight", "samencoder.stage4_blocks.0.norm2.bias", "samencoder.stage4_blocks.0.mlp.lin1.weight", "samencoder.stage4_blocks.0.mlp.lin1.bias", "samencoder.stage4_blocks.0.mlp.lin2.weight", "samencoder.stage4_blocks.0.mlp.lin2.bias", "samencoder.stage4_blocks.1.norm1.weight", "samencoder.stage4_blocks.1.norm1.bias", "samencoder.stage4_blocks.1.attn.qkv.weight", "samencoder.stage4_blocks.1.attn.qkv.bias", "samencoder.stage4_blocks.1.attn.proj.weight", "samencoder.stage4_blocks.1.attn.proj.bias", "samencoder.stage4_blocks.1.norm2.weight", "samencoder.stage4_blocks.1.norm2.bias", "samencoder.stage4_blocks.1.mlp.lin1.weight", "samencoder.stage4_blocks.1.mlp.lin1.bias", "samencoder.stage4_blocks.1.mlp.lin2.weight", "samencoder.stage4_blocks.1.mlp.lin2.bias", "samencoder.patchmerging0.reduction.weight", "samencoder.patchmerging0.norm.weight", "samencoder.patchmerging0.norm.bias". 
	size mismatch for samencoder.pos_embed: copying a param with shape torch.Size([1, 80, 80, 40, 96]) from checkpoint, the shape in current model is torch.Size([1, 80, 80, 40, 192]).
	size mismatch for samencoder.patch_embed1.proj.weight: copying a param with shape torch.Size([96, 1, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([192, 1, 2, 2, 2]).
	size mismatch for samencoder.patch_embed1.proj.bias: copying a param with shape torch.Size([96]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for vnet.block_one.conv.0.weight: copying a param with shape torch.Size([16, 1, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([32, 1, 3, 3, 3]).
	size mismatch for vnet.block_one.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_one.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_one.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_one.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_one.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_one_dw.conv.0.weight: copying a param with shape torch.Size([32, 16, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([64, 32, 2, 2, 2]).
	size mismatch for vnet.block_one_dw.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_one_dw.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_one_dw.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_one_dw.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_one_dw.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.0.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for vnet.block_two.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for vnet.block_two.conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two_dw.conv.0.weight: copying a param with shape torch.Size([64, 32, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([128, 64, 2, 2, 2]).
	size mismatch for vnet.block_two_dw.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_two_dw.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_two_dw.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_two_dw.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_two_dw.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.0.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_three.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_three.conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.6.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_three.conv.6.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.7.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.7.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.7.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.7.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three_dw.conv.0.weight: copying a param with shape torch.Size([128, 64, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([256, 128, 2, 2, 2]).
	size mismatch for vnet.block_three_dw.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_three_dw.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_three_dw.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_three_dw.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_three_dw.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.0.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_four.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_four.conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.6.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_four.conv.6.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.7.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.7.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.7.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.7.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four_dw.conv.0.weight: copying a param with shape torch.Size([256, 128, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([512, 256, 2, 2, 2]).
	size mismatch for vnet.block_four_dw.conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_four_dw.conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_four_dw.conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_four_dw.conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_four_dw.conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.0.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for vnet.block_five.conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.3.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for vnet.block_five.conv.3.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.4.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.4.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.4.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.4.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.6.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for vnet.block_five.conv.6.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.7.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.7.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.7.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.7.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five_up.conv.0.weight: copying a param with shape torch.Size([256, 128, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([512, 256, 2, 2, 2]).
	size mismatch for vnet.block_five_up.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_five_up.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_five_up.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_five_up.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_five_up.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.0.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_six.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_six.conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.6.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_six.conv.6.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.7.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.7.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.7.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.7.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six_up.conv.0.weight: copying a param with shape torch.Size([128, 64, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([256, 128, 2, 2, 2]).
	size mismatch for vnet.block_six_up.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_six_up.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_six_up.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_six_up.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_six_up.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.0.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_seven.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_seven.conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.6.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_seven.conv.6.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.7.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.7.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.7.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.7.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven_up.conv.0.weight: copying a param with shape torch.Size([64, 32, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([128, 64, 2, 2, 2]).
	size mismatch for vnet.block_seven_up.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_seven_up.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_seven_up.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_seven_up.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_seven_up.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.0.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for vnet.block_eight.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for vnet.block_eight.conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight_up.conv.0.weight: copying a param with shape torch.Size([32, 16, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([64, 32, 2, 2, 2]).
	size mismatch for vnet.block_eight_up.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_eight_up.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_eight_up.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_eight_up.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_eight_up.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_nine.conv.0.weight: copying a param with shape torch.Size([16, 16, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([32, 32, 3, 3, 3]).
	size mismatch for vnet.block_nine.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_nine.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_nine.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_nine.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_nine.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.logits_head.weight: copying a param with shape torch.Size([16, 16, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([16, 32, 1, 1, 1]).
	size mismatch for vnet.variance_head.0.weight: copying a param with shape torch.Size([1, 16, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 32, 1, 1, 1]).
	size mismatch for uncertainty_gen.network.block_one.conv.0.weight: copying a param with shape torch.Size([16, 1, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([32, 1, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_one.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_one.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_one.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_one.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_one.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.0.weight: copying a param with shape torch.Size([32, 16, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([64, 32, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.0.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_two.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_two.conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.0.weight: copying a param with shape torch.Size([64, 32, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([128, 64, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.0.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_three.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_three.conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.6.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_three.conv.6.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.7.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.7.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.7.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.7.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.0.weight: copying a param with shape torch.Size([128, 64, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([256, 128, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.0.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_four.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_four.conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.6.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_four.conv.6.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.7.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.7.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.7.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.7.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.0.weight: copying a param with shape torch.Size([256, 128, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([512, 256, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.0.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_five.conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.3.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_five.conv.3.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.4.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.4.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.4.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.4.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.6.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_five.conv.6.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.7.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.7.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.7.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.7.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.0.weight: copying a param with shape torch.Size([256, 128, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([512, 256, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.0.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_six.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_six.conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.6.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_six.conv.6.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.7.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.7.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.7.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.7.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.0.weight: copying a param with shape torch.Size([128, 64, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([256, 128, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.0.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_seven.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_seven.conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.6.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_seven.conv.6.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.7.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.7.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.7.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.7.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.0.weight: copying a param with shape torch.Size([64, 32, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([128, 64, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.0.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_eight.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_eight.conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.0.weight: copying a param with shape torch.Size([32, 16, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([64, 32, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_nine.conv.0.weight: copying a param with shape torch.Size([16, 16, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([32, 32, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_nine.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_nine.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_nine.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_nine.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_nine.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.logits_head.weight: copying a param with shape torch.Size([16, 16, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([16, 32, 1, 1, 1]).
	size mismatch for uncertainty_gen.network.variance_head.0.weight: copying a param with shape torch.Size([1, 16, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 32, 1, 1, 1]).
	size mismatch for carf_module.proj_a.weight: copying a param with shape torch.Size([768, 128, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([768, 256, 1, 1, 1]).
	size mismatch for carf_module.proj_b.weight: copying a param with shape torch.Size([768, 384, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([768, 768, 1, 1, 1]).
[2025-07-13 20:20:34] INFO     - 
======================================== 运行配置 ========================================
[2025-07-13 20:20:34] INFO     - model_path          : ./result/SAM3D_VNet_SSL/Amos_90_SemiSupervised_V15_2/Pth_Part1/epoch_100.pth
[2025-07-13 20:20:34] INFO     - amos_data_path      : ./datasets/Amos
[2025-07-13 20:20:34] INFO     - output_dir          : ./result/SAM3D_VNet_SSL/Amos_90_SemiSupervised_V15_2/Test_Part1
[2025-07-13 20:20:34] INFO     - split               : test
[2025-07-13 20:20:34] INFO     - speed               : 0
[2025-07-13 20:20:34] INFO     - gpu                 : 0
[2025-07-13 20:20:34] INFO     - n_filters           : 16
[2025-07-13 20:20:34] INFO     - num_channels        : 1
[2025-07-13 20:20:34] INFO     - metrics_log         : ./result/SAM3D_VNet_SSL/Amos_90_SemiSupervised_V15_2/Test_Part1/Test.log
[2025-07-13 20:20:34] INFO     - save_images         : False
[2025-07-13 20:20:34] INFO     - 输入尺寸: (160, 160, 80), 类别数量: 16, 滑动窗口步长: XY=40, Z=20
[2025-07-13 20:20:35] INFO     - 模型总参数量: 167.64M
[2025-07-13 20:20:36] INFO     - 成功从 ./result/SAM3D_VNet_SSL/Amos_90_SemiSupervised_V15_2/Pth_Part1/epoch_100.pth 加载 checkpoint 文件。
[2025-07-13 20:20:36] INFO     - 未找到 EMA 权重，选择 'model_state_dict' 进行加载。
[2025-07-13 20:20:36] INFO     - 检测到 'module.' 前缀，将进行移除。
[2025-07-13 20:20:36] ERROR    - 加载模型时发生错误: Error(s) in loading state_dict for Network:
	Missing key(s) in state_dict: "samencoder.block1.norm1.weight", "samencoder.block1.norm1.bias", "samencoder.block1.attn.qkv.weight", "samencoder.block1.attn.qkv.bias", "samencoder.block1.attn.proj.weight", "samencoder.block1.attn.proj.bias", "samencoder.block1.norm2.weight", "samencoder.block1.norm2.bias", "samencoder.block1.mlp.lin1.weight", "samencoder.block1.mlp.lin1.bias", "samencoder.block1.mlp.lin2.weight", "samencoder.block1.mlp.lin2.bias", "samencoder.block2.norm1.weight", "samencoder.block2.norm1.bias", "samencoder.block2.attn.qkv.weight", "samencoder.block2.attn.qkv.bias", "samencoder.block2.attn.proj.weight", "samencoder.block2.attn.proj.bias", "samencoder.block2.norm2.weight", "samencoder.block2.norm2.bias", "samencoder.block2.mlp.lin1.weight", "samencoder.block2.mlp.lin1.bias", "samencoder.block2.mlp.lin2.weight", "samencoder.block2.mlp.lin2.bias", "samencoder.block3.norm1.weight", "samencoder.block3.norm1.bias", "samencoder.block3.attn.qkv.weight", "samencoder.block3.attn.qkv.bias", "samencoder.block3.attn.proj.weight", "samencoder.block3.attn.proj.bias", "samencoder.block3.norm2.weight", "samencoder.block3.norm2.bias", "samencoder.block3.mlp.lin1.weight", "samencoder.block3.mlp.lin1.bias", "samencoder.block3.mlp.lin2.weight", "samencoder.block3.mlp.lin2.bias", "samencoder.block4.norm1.weight", "samencoder.block4.norm1.bias", "samencoder.block4.attn.qkv.weight", "samencoder.block4.attn.qkv.bias", "samencoder.block4.attn.proj.weight", "samencoder.block4.attn.proj.bias", "samencoder.block4.norm2.weight", "samencoder.block4.norm2.bias", "samencoder.block4.mlp.lin1.weight", "samencoder.block4.mlp.lin1.bias", "samencoder.block4.mlp.lin2.weight", "samencoder.block4.mlp.lin2.bias". 
	Unexpected key(s) in state_dict: "samencoder.stage1_blocks.0.norm1.weight", "samencoder.stage1_blocks.0.norm1.bias", "samencoder.stage1_blocks.0.attn.qkv.weight", "samencoder.stage1_blocks.0.attn.qkv.bias", "samencoder.stage1_blocks.0.attn.proj.weight", "samencoder.stage1_blocks.0.attn.proj.bias", "samencoder.stage1_blocks.0.norm2.weight", "samencoder.stage1_blocks.0.norm2.bias", "samencoder.stage1_blocks.0.mlp.lin1.weight", "samencoder.stage1_blocks.0.mlp.lin1.bias", "samencoder.stage1_blocks.0.mlp.lin2.weight", "samencoder.stage1_blocks.0.mlp.lin2.bias", "samencoder.stage1_blocks.1.norm1.weight", "samencoder.stage1_blocks.1.norm1.bias", "samencoder.stage1_blocks.1.attn.qkv.weight", "samencoder.stage1_blocks.1.attn.qkv.bias", "samencoder.stage1_blocks.1.attn.proj.weight", "samencoder.stage1_blocks.1.attn.proj.bias", "samencoder.stage1_blocks.1.norm2.weight", "samencoder.stage1_blocks.1.norm2.bias", "samencoder.stage1_blocks.1.mlp.lin1.weight", "samencoder.stage1_blocks.1.mlp.lin1.bias", "samencoder.stage1_blocks.1.mlp.lin2.weight", "samencoder.stage1_blocks.1.mlp.lin2.bias", "samencoder.stage2_blocks.0.norm1.weight", "samencoder.stage2_blocks.0.norm1.bias", "samencoder.stage2_blocks.0.attn.qkv.weight", "samencoder.stage2_blocks.0.attn.qkv.bias", "samencoder.stage2_blocks.0.attn.proj.weight", "samencoder.stage2_blocks.0.attn.proj.bias", "samencoder.stage2_blocks.0.norm2.weight", "samencoder.stage2_blocks.0.norm2.bias", "samencoder.stage2_blocks.0.mlp.lin1.weight", "samencoder.stage2_blocks.0.mlp.lin1.bias", "samencoder.stage2_blocks.0.mlp.lin2.weight", "samencoder.stage2_blocks.0.mlp.lin2.bias", "samencoder.stage2_blocks.1.norm1.weight", "samencoder.stage2_blocks.1.norm1.bias", "samencoder.stage2_blocks.1.attn.qkv.weight", "samencoder.stage2_blocks.1.attn.qkv.bias", "samencoder.stage2_blocks.1.attn.proj.weight", "samencoder.stage2_blocks.1.attn.proj.bias", "samencoder.stage2_blocks.1.norm2.weight", "samencoder.stage2_blocks.1.norm2.bias", "samencoder.stage2_blocks.1.mlp.lin1.weight", "samencoder.stage2_blocks.1.mlp.lin1.bias", "samencoder.stage2_blocks.1.mlp.lin2.weight", "samencoder.stage2_blocks.1.mlp.lin2.bias", "samencoder.stage3_blocks.0.norm1.weight", "samencoder.stage3_blocks.0.norm1.bias", "samencoder.stage3_blocks.0.attn.qkv.weight", "samencoder.stage3_blocks.0.attn.qkv.bias", "samencoder.stage3_blocks.0.attn.proj.weight", "samencoder.stage3_blocks.0.attn.proj.bias", "samencoder.stage3_blocks.0.norm2.weight", "samencoder.stage3_blocks.0.norm2.bias", "samencoder.stage3_blocks.0.mlp.lin1.weight", "samencoder.stage3_blocks.0.mlp.lin1.bias", "samencoder.stage3_blocks.0.mlp.lin2.weight", "samencoder.stage3_blocks.0.mlp.lin2.bias", "samencoder.stage3_blocks.1.norm1.weight", "samencoder.stage3_blocks.1.norm1.bias", "samencoder.stage3_blocks.1.attn.qkv.weight", "samencoder.stage3_blocks.1.attn.qkv.bias", "samencoder.stage3_blocks.1.attn.proj.weight", "samencoder.stage3_blocks.1.attn.proj.bias", "samencoder.stage3_blocks.1.norm2.weight", "samencoder.stage3_blocks.1.norm2.bias", "samencoder.stage3_blocks.1.mlp.lin1.weight", "samencoder.stage3_blocks.1.mlp.lin1.bias", "samencoder.stage3_blocks.1.mlp.lin2.weight", "samencoder.stage3_blocks.1.mlp.lin2.bias", "samencoder.stage3_blocks.2.norm1.weight", "samencoder.stage3_blocks.2.norm1.bias", "samencoder.stage3_blocks.2.attn.qkv.weight", "samencoder.stage3_blocks.2.attn.qkv.bias", "samencoder.stage3_blocks.2.attn.proj.weight", "samencoder.stage3_blocks.2.attn.proj.bias", "samencoder.stage3_blocks.2.norm2.weight", "samencoder.stage3_blocks.2.norm2.bias", "samencoder.stage3_blocks.2.mlp.lin1.weight", "samencoder.stage3_blocks.2.mlp.lin1.bias", "samencoder.stage3_blocks.2.mlp.lin2.weight", "samencoder.stage3_blocks.2.mlp.lin2.bias", "samencoder.stage3_blocks.3.norm1.weight", "samencoder.stage3_blocks.3.norm1.bias", "samencoder.stage3_blocks.3.attn.qkv.weight", "samencoder.stage3_blocks.3.attn.qkv.bias", "samencoder.stage3_blocks.3.attn.proj.weight", "samencoder.stage3_blocks.3.attn.proj.bias", "samencoder.stage3_blocks.3.norm2.weight", "samencoder.stage3_blocks.3.norm2.bias", "samencoder.stage3_blocks.3.mlp.lin1.weight", "samencoder.stage3_blocks.3.mlp.lin1.bias", "samencoder.stage3_blocks.3.mlp.lin2.weight", "samencoder.stage3_blocks.3.mlp.lin2.bias", "samencoder.stage4_blocks.0.norm1.weight", "samencoder.stage4_blocks.0.norm1.bias", "samencoder.stage4_blocks.0.attn.qkv.weight", "samencoder.stage4_blocks.0.attn.qkv.bias", "samencoder.stage4_blocks.0.attn.proj.weight", "samencoder.stage4_blocks.0.attn.proj.bias", "samencoder.stage4_blocks.0.norm2.weight", "samencoder.stage4_blocks.0.norm2.bias", "samencoder.stage4_blocks.0.mlp.lin1.weight", "samencoder.stage4_blocks.0.mlp.lin1.bias", "samencoder.stage4_blocks.0.mlp.lin2.weight", "samencoder.stage4_blocks.0.mlp.lin2.bias", "samencoder.stage4_blocks.1.norm1.weight", "samencoder.stage4_blocks.1.norm1.bias", "samencoder.stage4_blocks.1.attn.qkv.weight", "samencoder.stage4_blocks.1.attn.qkv.bias", "samencoder.stage4_blocks.1.attn.proj.weight", "samencoder.stage4_blocks.1.attn.proj.bias", "samencoder.stage4_blocks.1.norm2.weight", "samencoder.stage4_blocks.1.norm2.bias", "samencoder.stage4_blocks.1.mlp.lin1.weight", "samencoder.stage4_blocks.1.mlp.lin1.bias", "samencoder.stage4_blocks.1.mlp.lin2.weight", "samencoder.stage4_blocks.1.mlp.lin2.bias", "samencoder.patchmerging0.reduction.weight", "samencoder.patchmerging0.norm.weight", "samencoder.patchmerging0.norm.bias". 
	size mismatch for samencoder.pos_embed: copying a param with shape torch.Size([1, 80, 80, 40, 96]) from checkpoint, the shape in current model is torch.Size([1, 80, 80, 40, 192]).
	size mismatch for samencoder.patch_embed1.proj.weight: copying a param with shape torch.Size([96, 1, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([192, 1, 2, 2, 2]).
	size mismatch for samencoder.patch_embed1.proj.bias: copying a param with shape torch.Size([96]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for vnet.block_one.conv.0.weight: copying a param with shape torch.Size([16, 1, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([32, 1, 3, 3, 3]).
	size mismatch for vnet.block_one.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_one.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_one.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_one.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_one.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_one_dw.conv.0.weight: copying a param with shape torch.Size([32, 16, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([64, 32, 2, 2, 2]).
	size mismatch for vnet.block_one_dw.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_one_dw.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_one_dw.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_one_dw.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_one_dw.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.0.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for vnet.block_two.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for vnet.block_two.conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two_dw.conv.0.weight: copying a param with shape torch.Size([64, 32, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([128, 64, 2, 2, 2]).
	size mismatch for vnet.block_two_dw.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_two_dw.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_two_dw.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_two_dw.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_two_dw.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.0.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_three.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_three.conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.6.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_three.conv.6.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.7.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.7.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.7.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.7.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three_dw.conv.0.weight: copying a param with shape torch.Size([128, 64, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([256, 128, 2, 2, 2]).
	size mismatch for vnet.block_three_dw.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_three_dw.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_three_dw.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_three_dw.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_three_dw.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.0.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_four.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_four.conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.6.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_four.conv.6.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.7.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.7.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.7.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.7.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four_dw.conv.0.weight: copying a param with shape torch.Size([256, 128, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([512, 256, 2, 2, 2]).
	size mismatch for vnet.block_four_dw.conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_four_dw.conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_four_dw.conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_four_dw.conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_four_dw.conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.0.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for vnet.block_five.conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.3.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for vnet.block_five.conv.3.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.4.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.4.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.4.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.4.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.6.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for vnet.block_five.conv.6.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.7.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.7.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.7.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.7.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five_up.conv.0.weight: copying a param with shape torch.Size([256, 128, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([512, 256, 2, 2, 2]).
	size mismatch for vnet.block_five_up.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_five_up.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_five_up.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_five_up.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_five_up.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.0.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_six.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_six.conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.6.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_six.conv.6.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.7.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.7.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.7.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.7.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six_up.conv.0.weight: copying a param with shape torch.Size([128, 64, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([256, 128, 2, 2, 2]).
	size mismatch for vnet.block_six_up.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_six_up.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_six_up.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_six_up.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_six_up.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.0.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_seven.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_seven.conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.6.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_seven.conv.6.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.7.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.7.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.7.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.7.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven_up.conv.0.weight: copying a param with shape torch.Size([64, 32, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([128, 64, 2, 2, 2]).
	size mismatch for vnet.block_seven_up.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_seven_up.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_seven_up.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_seven_up.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_seven_up.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.0.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for vnet.block_eight.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for vnet.block_eight.conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight_up.conv.0.weight: copying a param with shape torch.Size([32, 16, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([64, 32, 2, 2, 2]).
	size mismatch for vnet.block_eight_up.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_eight_up.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_eight_up.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_eight_up.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_eight_up.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_nine.conv.0.weight: copying a param with shape torch.Size([16, 16, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([32, 32, 3, 3, 3]).
	size mismatch for vnet.block_nine.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_nine.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_nine.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_nine.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_nine.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.logits_head.weight: copying a param with shape torch.Size([16, 16, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([16, 32, 1, 1, 1]).
	size mismatch for vnet.variance_head.0.weight: copying a param with shape torch.Size([1, 16, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 32, 1, 1, 1]).
	size mismatch for uncertainty_gen.network.block_one.conv.0.weight: copying a param with shape torch.Size([16, 1, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([32, 1, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_one.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_one.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_one.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_one.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_one.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.0.weight: copying a param with shape torch.Size([32, 16, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([64, 32, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.0.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_two.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_two.conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.0.weight: copying a param with shape torch.Size([64, 32, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([128, 64, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.0.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_three.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_three.conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.6.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_three.conv.6.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.7.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.7.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.7.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.7.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.0.weight: copying a param with shape torch.Size([128, 64, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([256, 128, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.0.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_four.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_four.conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.6.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_four.conv.6.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.7.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.7.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.7.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.7.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.0.weight: copying a param with shape torch.Size([256, 128, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([512, 256, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.0.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_five.conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.3.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_five.conv.3.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.4.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.4.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.4.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.4.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.6.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_five.conv.6.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.7.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.7.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.7.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.7.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.0.weight: copying a param with shape torch.Size([256, 128, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([512, 256, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.0.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_six.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_six.conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.6.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_six.conv.6.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.7.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.7.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.7.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.7.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.0.weight: copying a param with shape torch.Size([128, 64, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([256, 128, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.0.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_seven.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_seven.conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.6.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_seven.conv.6.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.7.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.7.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.7.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.7.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.0.weight: copying a param with shape torch.Size([64, 32, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([128, 64, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.0.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_eight.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_eight.conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.0.weight: copying a param with shape torch.Size([32, 16, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([64, 32, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_nine.conv.0.weight: copying a param with shape torch.Size([16, 16, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([32, 32, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_nine.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_nine.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_nine.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_nine.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_nine.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.logits_head.weight: copying a param with shape torch.Size([16, 16, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([16, 32, 1, 1, 1]).
	size mismatch for uncertainty_gen.network.variance_head.0.weight: copying a param with shape torch.Size([1, 16, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 32, 1, 1, 1]).
	size mismatch for carf_module.proj_a.weight: copying a param with shape torch.Size([768, 128, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([768, 256, 1, 1, 1]).
	size mismatch for carf_module.proj_b.weight: copying a param with shape torch.Size([768, 384, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([768, 768, 1, 1, 1]).
[2025-07-13 20:20:36] ERROR    - 模型初始化失败!
Traceback (most recent call last):
  File "/samba/network-storage/westdigital/pi/sam2-ssl/Test_Amos_V2.py", line 298, in <module>
    model = load_model(model, args.model_path, device)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/samba/network-storage/westdigital/pi/sam2-ssl/Test_Amos_V2.py", line 227, in load_model
    model.load_state_dict(state_dict_final)
  File "/samba/network-storage/remotessd/cache/envs/torch-env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 2593, in load_state_dict
    raise RuntimeError(
RuntimeError: Error(s) in loading state_dict for Network:
	Missing key(s) in state_dict: "samencoder.block1.norm1.weight", "samencoder.block1.norm1.bias", "samencoder.block1.attn.qkv.weight", "samencoder.block1.attn.qkv.bias", "samencoder.block1.attn.proj.weight", "samencoder.block1.attn.proj.bias", "samencoder.block1.norm2.weight", "samencoder.block1.norm2.bias", "samencoder.block1.mlp.lin1.weight", "samencoder.block1.mlp.lin1.bias", "samencoder.block1.mlp.lin2.weight", "samencoder.block1.mlp.lin2.bias", "samencoder.block2.norm1.weight", "samencoder.block2.norm1.bias", "samencoder.block2.attn.qkv.weight", "samencoder.block2.attn.qkv.bias", "samencoder.block2.attn.proj.weight", "samencoder.block2.attn.proj.bias", "samencoder.block2.norm2.weight", "samencoder.block2.norm2.bias", "samencoder.block2.mlp.lin1.weight", "samencoder.block2.mlp.lin1.bias", "samencoder.block2.mlp.lin2.weight", "samencoder.block2.mlp.lin2.bias", "samencoder.block3.norm1.weight", "samencoder.block3.norm1.bias", "samencoder.block3.attn.qkv.weight", "samencoder.block3.attn.qkv.bias", "samencoder.block3.attn.proj.weight", "samencoder.block3.attn.proj.bias", "samencoder.block3.norm2.weight", "samencoder.block3.norm2.bias", "samencoder.block3.mlp.lin1.weight", "samencoder.block3.mlp.lin1.bias", "samencoder.block3.mlp.lin2.weight", "samencoder.block3.mlp.lin2.bias", "samencoder.block4.norm1.weight", "samencoder.block4.norm1.bias", "samencoder.block4.attn.qkv.weight", "samencoder.block4.attn.qkv.bias", "samencoder.block4.attn.proj.weight", "samencoder.block4.attn.proj.bias", "samencoder.block4.norm2.weight", "samencoder.block4.norm2.bias", "samencoder.block4.mlp.lin1.weight", "samencoder.block4.mlp.lin1.bias", "samencoder.block4.mlp.lin2.weight", "samencoder.block4.mlp.lin2.bias". 
	Unexpected key(s) in state_dict: "samencoder.stage1_blocks.0.norm1.weight", "samencoder.stage1_blocks.0.norm1.bias", "samencoder.stage1_blocks.0.attn.qkv.weight", "samencoder.stage1_blocks.0.attn.qkv.bias", "samencoder.stage1_blocks.0.attn.proj.weight", "samencoder.stage1_blocks.0.attn.proj.bias", "samencoder.stage1_blocks.0.norm2.weight", "samencoder.stage1_blocks.0.norm2.bias", "samencoder.stage1_blocks.0.mlp.lin1.weight", "samencoder.stage1_blocks.0.mlp.lin1.bias", "samencoder.stage1_blocks.0.mlp.lin2.weight", "samencoder.stage1_blocks.0.mlp.lin2.bias", "samencoder.stage1_blocks.1.norm1.weight", "samencoder.stage1_blocks.1.norm1.bias", "samencoder.stage1_blocks.1.attn.qkv.weight", "samencoder.stage1_blocks.1.attn.qkv.bias", "samencoder.stage1_blocks.1.attn.proj.weight", "samencoder.stage1_blocks.1.attn.proj.bias", "samencoder.stage1_blocks.1.norm2.weight", "samencoder.stage1_blocks.1.norm2.bias", "samencoder.stage1_blocks.1.mlp.lin1.weight", "samencoder.stage1_blocks.1.mlp.lin1.bias", "samencoder.stage1_blocks.1.mlp.lin2.weight", "samencoder.stage1_blocks.1.mlp.lin2.bias", "samencoder.stage2_blocks.0.norm1.weight", "samencoder.stage2_blocks.0.norm1.bias", "samencoder.stage2_blocks.0.attn.qkv.weight", "samencoder.stage2_blocks.0.attn.qkv.bias", "samencoder.stage2_blocks.0.attn.proj.weight", "samencoder.stage2_blocks.0.attn.proj.bias", "samencoder.stage2_blocks.0.norm2.weight", "samencoder.stage2_blocks.0.norm2.bias", "samencoder.stage2_blocks.0.mlp.lin1.weight", "samencoder.stage2_blocks.0.mlp.lin1.bias", "samencoder.stage2_blocks.0.mlp.lin2.weight", "samencoder.stage2_blocks.0.mlp.lin2.bias", "samencoder.stage2_blocks.1.norm1.weight", "samencoder.stage2_blocks.1.norm1.bias", "samencoder.stage2_blocks.1.attn.qkv.weight", "samencoder.stage2_blocks.1.attn.qkv.bias", "samencoder.stage2_blocks.1.attn.proj.weight", "samencoder.stage2_blocks.1.attn.proj.bias", "samencoder.stage2_blocks.1.norm2.weight", "samencoder.stage2_blocks.1.norm2.bias", "samencoder.stage2_blocks.1.mlp.lin1.weight", "samencoder.stage2_blocks.1.mlp.lin1.bias", "samencoder.stage2_blocks.1.mlp.lin2.weight", "samencoder.stage2_blocks.1.mlp.lin2.bias", "samencoder.stage3_blocks.0.norm1.weight", "samencoder.stage3_blocks.0.norm1.bias", "samencoder.stage3_blocks.0.attn.qkv.weight", "samencoder.stage3_blocks.0.attn.qkv.bias", "samencoder.stage3_blocks.0.attn.proj.weight", "samencoder.stage3_blocks.0.attn.proj.bias", "samencoder.stage3_blocks.0.norm2.weight", "samencoder.stage3_blocks.0.norm2.bias", "samencoder.stage3_blocks.0.mlp.lin1.weight", "samencoder.stage3_blocks.0.mlp.lin1.bias", "samencoder.stage3_blocks.0.mlp.lin2.weight", "samencoder.stage3_blocks.0.mlp.lin2.bias", "samencoder.stage3_blocks.1.norm1.weight", "samencoder.stage3_blocks.1.norm1.bias", "samencoder.stage3_blocks.1.attn.qkv.weight", "samencoder.stage3_blocks.1.attn.qkv.bias", "samencoder.stage3_blocks.1.attn.proj.weight", "samencoder.stage3_blocks.1.attn.proj.bias", "samencoder.stage3_blocks.1.norm2.weight", "samencoder.stage3_blocks.1.norm2.bias", "samencoder.stage3_blocks.1.mlp.lin1.weight", "samencoder.stage3_blocks.1.mlp.lin1.bias", "samencoder.stage3_blocks.1.mlp.lin2.weight", "samencoder.stage3_blocks.1.mlp.lin2.bias", "samencoder.stage3_blocks.2.norm1.weight", "samencoder.stage3_blocks.2.norm1.bias", "samencoder.stage3_blocks.2.attn.qkv.weight", "samencoder.stage3_blocks.2.attn.qkv.bias", "samencoder.stage3_blocks.2.attn.proj.weight", "samencoder.stage3_blocks.2.attn.proj.bias", "samencoder.stage3_blocks.2.norm2.weight", "samencoder.stage3_blocks.2.norm2.bias", "samencoder.stage3_blocks.2.mlp.lin1.weight", "samencoder.stage3_blocks.2.mlp.lin1.bias", "samencoder.stage3_blocks.2.mlp.lin2.weight", "samencoder.stage3_blocks.2.mlp.lin2.bias", "samencoder.stage3_blocks.3.norm1.weight", "samencoder.stage3_blocks.3.norm1.bias", "samencoder.stage3_blocks.3.attn.qkv.weight", "samencoder.stage3_blocks.3.attn.qkv.bias", "samencoder.stage3_blocks.3.attn.proj.weight", "samencoder.stage3_blocks.3.attn.proj.bias", "samencoder.stage3_blocks.3.norm2.weight", "samencoder.stage3_blocks.3.norm2.bias", "samencoder.stage3_blocks.3.mlp.lin1.weight", "samencoder.stage3_blocks.3.mlp.lin1.bias", "samencoder.stage3_blocks.3.mlp.lin2.weight", "samencoder.stage3_blocks.3.mlp.lin2.bias", "samencoder.stage4_blocks.0.norm1.weight", "samencoder.stage4_blocks.0.norm1.bias", "samencoder.stage4_blocks.0.attn.qkv.weight", "samencoder.stage4_blocks.0.attn.qkv.bias", "samencoder.stage4_blocks.0.attn.proj.weight", "samencoder.stage4_blocks.0.attn.proj.bias", "samencoder.stage4_blocks.0.norm2.weight", "samencoder.stage4_blocks.0.norm2.bias", "samencoder.stage4_blocks.0.mlp.lin1.weight", "samencoder.stage4_blocks.0.mlp.lin1.bias", "samencoder.stage4_blocks.0.mlp.lin2.weight", "samencoder.stage4_blocks.0.mlp.lin2.bias", "samencoder.stage4_blocks.1.norm1.weight", "samencoder.stage4_blocks.1.norm1.bias", "samencoder.stage4_blocks.1.attn.qkv.weight", "samencoder.stage4_blocks.1.attn.qkv.bias", "samencoder.stage4_blocks.1.attn.proj.weight", "samencoder.stage4_blocks.1.attn.proj.bias", "samencoder.stage4_blocks.1.norm2.weight", "samencoder.stage4_blocks.1.norm2.bias", "samencoder.stage4_blocks.1.mlp.lin1.weight", "samencoder.stage4_blocks.1.mlp.lin1.bias", "samencoder.stage4_blocks.1.mlp.lin2.weight", "samencoder.stage4_blocks.1.mlp.lin2.bias", "samencoder.patchmerging0.reduction.weight", "samencoder.patchmerging0.norm.weight", "samencoder.patchmerging0.norm.bias". 
	size mismatch for samencoder.pos_embed: copying a param with shape torch.Size([1, 80, 80, 40, 96]) from checkpoint, the shape in current model is torch.Size([1, 80, 80, 40, 192]).
	size mismatch for samencoder.patch_embed1.proj.weight: copying a param with shape torch.Size([96, 1, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([192, 1, 2, 2, 2]).
	size mismatch for samencoder.patch_embed1.proj.bias: copying a param with shape torch.Size([96]) from checkpoint, the shape in current model is torch.Size([192]).
	size mismatch for vnet.block_one.conv.0.weight: copying a param with shape torch.Size([16, 1, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([32, 1, 3, 3, 3]).
	size mismatch for vnet.block_one.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_one.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_one.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_one.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_one.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_one_dw.conv.0.weight: copying a param with shape torch.Size([32, 16, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([64, 32, 2, 2, 2]).
	size mismatch for vnet.block_one_dw.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_one_dw.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_one_dw.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_one_dw.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_one_dw.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.0.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for vnet.block_two.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for vnet.block_two.conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two.conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_two_dw.conv.0.weight: copying a param with shape torch.Size([64, 32, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([128, 64, 2, 2, 2]).
	size mismatch for vnet.block_two_dw.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_two_dw.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_two_dw.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_two_dw.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_two_dw.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.0.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_three.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_three.conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.6.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_three.conv.6.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.7.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.7.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.7.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three.conv.7.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_three_dw.conv.0.weight: copying a param with shape torch.Size([128, 64, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([256, 128, 2, 2, 2]).
	size mismatch for vnet.block_three_dw.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_three_dw.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_three_dw.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_three_dw.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_three_dw.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.0.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_four.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_four.conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.6.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_four.conv.6.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.7.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.7.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.7.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four.conv.7.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_four_dw.conv.0.weight: copying a param with shape torch.Size([256, 128, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([512, 256, 2, 2, 2]).
	size mismatch for vnet.block_four_dw.conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_four_dw.conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_four_dw.conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_four_dw.conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_four_dw.conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.0.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for vnet.block_five.conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.3.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for vnet.block_five.conv.3.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.4.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.4.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.4.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.4.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.6.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for vnet.block_five.conv.6.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.7.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.7.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.7.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five.conv.7.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for vnet.block_five_up.conv.0.weight: copying a param with shape torch.Size([256, 128, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([512, 256, 2, 2, 2]).
	size mismatch for vnet.block_five_up.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_five_up.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_five_up.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_five_up.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_five_up.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.0.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_six.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_six.conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.6.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for vnet.block_six.conv.6.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.7.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.7.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.7.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six.conv.7.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for vnet.block_six_up.conv.0.weight: copying a param with shape torch.Size([128, 64, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([256, 128, 2, 2, 2]).
	size mismatch for vnet.block_six_up.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_six_up.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_six_up.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_six_up.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_six_up.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.0.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_seven.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_seven.conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.6.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for vnet.block_seven.conv.6.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.7.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.7.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.7.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven.conv.7.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for vnet.block_seven_up.conv.0.weight: copying a param with shape torch.Size([64, 32, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([128, 64, 2, 2, 2]).
	size mismatch for vnet.block_seven_up.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_seven_up.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_seven_up.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_seven_up.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_seven_up.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.0.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for vnet.block_eight.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for vnet.block_eight.conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight.conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for vnet.block_eight_up.conv.0.weight: copying a param with shape torch.Size([32, 16, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([64, 32, 2, 2, 2]).
	size mismatch for vnet.block_eight_up.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_eight_up.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_eight_up.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_eight_up.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_eight_up.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_nine.conv.0.weight: copying a param with shape torch.Size([16, 16, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([32, 32, 3, 3, 3]).
	size mismatch for vnet.block_nine.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_nine.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_nine.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_nine.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.block_nine.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for vnet.logits_head.weight: copying a param with shape torch.Size([16, 16, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([16, 32, 1, 1, 1]).
	size mismatch for vnet.variance_head.0.weight: copying a param with shape torch.Size([1, 16, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 32, 1, 1, 1]).
	size mismatch for uncertainty_gen.network.block_one.conv.0.weight: copying a param with shape torch.Size([16, 1, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([32, 1, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_one.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_one.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_one.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_one.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_one.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.0.weight: copying a param with shape torch.Size([32, 16, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([64, 32, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_one_dw.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.0.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_two.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_two.conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two.conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.0.weight: copying a param with shape torch.Size([64, 32, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([128, 64, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_two_dw.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.0.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_three.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_three.conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.6.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_three.conv.6.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.7.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.7.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.7.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three.conv.7.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.0.weight: copying a param with shape torch.Size([128, 64, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([256, 128, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_three_dw.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.0.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_four.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_four.conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.6.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_four.conv.6.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.7.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.7.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.7.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four.conv.7.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.0.weight: copying a param with shape torch.Size([256, 128, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([512, 256, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_four_dw.conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.0.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_five.conv.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.1.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.1.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.3.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_five.conv.3.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.4.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.4.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.4.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.4.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.6.weight: copying a param with shape torch.Size([256, 256, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([512, 512, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_five.conv.6.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.7.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.7.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.7.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five.conv.7.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([512]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.0.weight: copying a param with shape torch.Size([256, 128, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([512, 256, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_five_up.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.0.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_six.conv.0.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.1.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.1.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.3.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_six.conv.3.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.4.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.4.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.4.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.4.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.6.weight: copying a param with shape torch.Size([128, 128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([256, 256, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_six.conv.6.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.7.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.7.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.7.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six.conv.7.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([256]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.0.weight: copying a param with shape torch.Size([128, 64, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([256, 128, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_six_up.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.0.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_seven.conv.0.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.1.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.1.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.1.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.1.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.3.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_seven.conv.3.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.4.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.4.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.4.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.4.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.6.weight: copying a param with shape torch.Size([64, 64, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([128, 128, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_seven.conv.6.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.7.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.7.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.7.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven.conv.7.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([128]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.0.weight: copying a param with shape torch.Size([64, 32, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([128, 64, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_seven_up.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.0.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_eight.conv.0.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.1.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.1.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.1.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.1.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.3.weight: copying a param with shape torch.Size([32, 32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([64, 64, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_eight.conv.3.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.4.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.4.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.4.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight.conv.4.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([64]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.0.weight: copying a param with shape torch.Size([32, 16, 2, 2, 2]) from checkpoint, the shape in current model is torch.Size([64, 32, 2, 2, 2]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_eight_up.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_nine.conv.0.weight: copying a param with shape torch.Size([16, 16, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([32, 32, 3, 3, 3]).
	size mismatch for uncertainty_gen.network.block_nine.conv.0.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_nine.conv.1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_nine.conv.1.bias: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_nine.conv.1.running_mean: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.block_nine.conv.1.running_var: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for uncertainty_gen.network.logits_head.weight: copying a param with shape torch.Size([16, 16, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([16, 32, 1, 1, 1]).
	size mismatch for uncertainty_gen.network.variance_head.0.weight: copying a param with shape torch.Size([1, 16, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 32, 1, 1, 1]).
	size mismatch for carf_module.proj_a.weight: copying a param with shape torch.Size([768, 128, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([768, 256, 1, 1, 1]).
	size mismatch for carf_module.proj_b.weight: copying a param with shape torch.Size([768, 384, 1, 1, 1]) from checkpoint, the shape in current model is torch.Size([768, 768, 1, 1, 1]).
